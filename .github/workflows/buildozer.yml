name: Сборка APK - Улучшенная

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build-apk:
    runs-on: ubuntu-22.04 # 1. Используем стабильную версию Ubuntu

    steps:
      - name: Checkout code # 2. Получаем код проекта
        uses: actions/checkout@v4

      - name: Setup Python # 3. Настраиваем Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Явно указываем 3.10

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libffi-dev \
            libssl-dev \
            zlib1g-dev \
            libsqlite3-dev \
            libncurses-dev \        # ← Исправлено: было libncurses5-dev
            libbz2-dev \
            libxml2-dev \
            libxslt1-dev

      - name: Install Python dependencies # 5. Устанавливаем Python-пакеты
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Устанавливаем Cython с фиксированной версией, совместимой с Kivy
          pip install Cython==0.29.36
          # Устанавливаем Buildozer
          pip install buildozer

      - name: Ensure main.py exists # 6. Проверяем/создаем точку входа
        run: |
          if [ ! -f "main.py" ]; then
            echo 'print("APK build successful!")' > main.py
            echo "WARNING: main.py was not found and has been created with a default print statement."
          fi

      - name: Create buildozer.spec # 7. Создаем конфигурационный файл явно
        run: |
          cat > buildozer.spec << 'EOF'
          [app]
          title = Bar Inventory
          package.name = barinventory
          package.domain = org.example
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas,db
          version = 0.2
          # ВАЖНО: openpyxl удален для стабильной сборки
          requirements = python3,kivy,sqlite3
          # Используем API 33 как более стабильный
          android.api = 33
          android.minapi = 21
          android.ndk = 25b
          # Указываем архитектуру
          android.archs = arm64-v8a
          orientation = portrait
          # Не забываем про лицензию
          android.accept_sdk_license = True
          # Разрешения приложения
          android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE

          [buildozer]
          # Более подробный лог
          log_level = 2
          warn_on_root = 1
          EOF

      # 8. Очистка предыдущих сборок (опционально, но рекомендуется для чистоты)
      - name: Clean previous build (optional)
        run: |
          rm -rf .buildozer
          rm -rf bin

      - name: Build APK # 9. Запускаем сборку
        run: |
          buildozer -v android debug

      - name: Upload APK # 10. Загружаем результат
        uses: actions/upload-artifact@v4
        with:
          name: bar-inventory-apk
          path: bin/*.apk
